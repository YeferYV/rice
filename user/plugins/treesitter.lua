return {
  "nvim-treesitter/nvim-treesitter",
  config = {
    ensure_installed = { "python", "bash", "javascript", "json", "html", "css", "c", "lua" },
    incremental_selection = {
      enable = true,
      disable = { "yaml" },
      keymaps = {
        init_selection = '<c-space>',   -- maps in normal mode to init the node/scope selection
        node_incremental = '<c-space>', -- increment to the upper named parent
        scope_incremental = '<c-]>',    -- increment to the upper scope (as defined in locals.scm)
        node_decremental = '<c-[>',     -- decrement to the previous node
      }
    },
    textobjects = {
      move = {
        enable = true,
        set_jumps = true,
        goto_previous_start = {
          ['[aq'] = '@call.outer',
          ['[aQ'] = '@class.outer',
          ['[ag'] = '@comment.outer',
          ['[aG'] = '@conditional.outer',
          ['[aB'] = '@block.outer',
          ['[aF'] = '@function.outer',
          ['[aL'] = '@loop.outer',
          ['[aP'] = '@parameter.outer',
          ['[aR'] = '@return.outer',
          ['[a='] = '@assignment.outer',
          ['[a+'] = '@assignment.lhs',
          ["[aX"] = { query = "@scope", query_group = "locals", desc = "Prev scope" },
          ["[["] = { query = "@fold", query_group = "folds", desc = "Previous Start Fold" },

          ['[iq'] = '@call.inner',
          ['[iQ'] = '@class.inner',
          ['[ig'] = '@comment.inner',
          ['[iG'] = '@conditional.inner',
          ['[iB'] = '@block.inner',
          ['[iF'] = '@function.inner',
          ['[iL'] = '@loop.inner',
          ['[iP'] = '@parameter.inner',
          ['[iR'] = '@return.inner',
          ['[i='] = '@assignment.inner',
          ['[i+'] = '@assignment.rhs',
        },
        goto_next_start = {
          [']aq'] = '@call.outer',
          [']aQ'] = '@class.outer',
          [']ag'] = '@comment.outer',
          [']aG'] = '@conditional.outer',
          [']aB'] = '@block.outer',
          [']aF'] = '@function.outer',
          [']aL'] = '@loop.outer',
          [']aP'] = '@parameter.outer',
          [']aR'] = '@return.outer',
          [']a='] = '@assignment.outer',
          [']a+'] = '@assignment.lhs',
          ["]aX"] = { query = "@scope", query_group = "locals", desc = "Next scope" },
          ["]]"] = { query = "@fold", query_group = "folds", desc = "Next Start Fold" },

          [']iq'] = '@call.inner',
          [']iQ'] = '@class.inner',
          [']ig'] = '@comment.inner',
          [']iG'] = '@conditional.inner',
          [']iB'] = '@block.inner',
          [']iF'] = '@function.inner',
          [']iL'] = '@loop.inner',
          [']iP'] = '@parameter.inner',
          [']iR'] = '@return.inner',
          [']i='] = '@assignment.inner',
          [']i+'] = '@assignment.rhs',
        },
        goto_previous_end = {
          ['[eaq'] = '@call.outer',
          ['[eaQ'] = '@class.outer',
          ['[eag'] = '@comment.outer',
          ['[eaG'] = '@conditional.outer',
          ['[eaB'] = '@block.outer',
          ['[eaF'] = '@function.outer',
          ['[eaL'] = '@loop.outer',
          ['[eaP'] = '@parameter.outer',
          ['[eaR'] = '@return.outer',
          ['[ea='] = '@assignment.outer',
          ['[ea+'] = '@assignment.lhs',
          ["[eX"] = { query = "@scope", query_group = "locals", desc = "Next scope" },
          ["[e["] = { query = "@fold", query_group = "folds", desc = "Previous End Fold" },

          ['[eiq'] = '@call.inner',
          ['[eiQ'] = '@class.inner',
          ['[eig'] = '@comment.inner',
          ['[eiG'] = '@conditional.inner',
          ['[eiB'] = '@block.inner',
          ['[eiF'] = '@function.inner',
          ['[eiL'] = '@loop.inner',
          ['[eiP'] = '@parameter.inner',
          ['[eiR'] = '@return.inner',
          ['[ei='] = '@assignment.inner',
          ['[ei+'] = '@assignment.rhs',
        },
        goto_next_end = {
          [']eaq'] = '@call.outer',
          [']eaQ'] = '@class.outer',
          [']eag'] = '@comment.outer',
          [']eaG'] = '@conditional.outer',
          [']eaB'] = '@block.outer',
          [']eaF'] = '@function.outer',
          [']eaL'] = '@loop.outer',
          [']eaP'] = '@parameter.outer',
          [']eaR'] = '@return.outer',
          [']ea='] = '@assignment.outer',
          [']ea+'] = '@assignment.lhs',
          ["]eX"] = { query = "@scope", query_group = "locals", desc = "Next scope" },
          ["]e]"] = { query = "@fold", query_group = "folds", desc = "Next End Fold" },

          [']eiq'] = '@call.inner',
          [']eiQ'] = '@class.inner',
          [']eig'] = '@comment.inner',
          [']eiG'] = '@conditional.inner',
          [']eiB'] = '@block.inner',
          [']eiF'] = '@function.inner',
          [']eiL'] = '@loop.inner',
          [']eiP'] = '@parameter.inner',
          [']eiR'] = '@return.inner',
          [']ei='] = '@assignment.inner',
          [']ei+'] = '@assignment.rhs',
        },
      },
      swap = {
        enable = true,
        swap_next = {
          ['>,'] = '@parameter.inner',
        },
        swap_previous = {
          ['<,'] = '@parameter.inner',
        },
      },
      lsp_interop = {
        enable = true,
        border = 'rounded', --'none', 'single', 'double', 'rounded', 'solid', 'shadow'.
        peek_definition_code = {
          ['<leader>lf'] = '@function.outer',
          ['<leader>lc'] = '@class.outer',
        },
      },
    },
    textsubjects = {
      enable = true,
      prev_selection = 'Q',           -- (Optional) keymap to select the previous selection
      keymaps = {
        ['K'] = 'textsubjects-smart', -- useful for block of comments
        ['aK'] = 'textsubjects-container-outer',
        ['iK'] = 'textsubjects-container-inner',
      },
    },
  },
}
