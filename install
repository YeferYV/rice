#!/usr/bin/env bash

# xhost + && su -w WEZTERM_PANE,WEZTERM_UNIX_SOCKET,LESSKEYIN -
# docker run -it --name ubuntu-nix-rice -v $PWD:/home/dotfiles/CICD ubuntu bash -uelic '
#     [[ ! -e /home/drksl ]] && {
#         apt update
#         DEBIAN_FRONTEND=noninteractive apt install -y sudo
#         useradd -mG sudo,tty drksl
#         echo root:toor | chpasswd
#         echo drksl:toor | chpasswd
#         echo "%sudo ALL=(ALL:ALL) NOPASSWD: ALL" > /etc/sudoers.d/wheel
#         chown -R drksl:drksl /home/dotfiles
#         sudo -u "drksl" bash -c "/home/dotfiles/CICD/Rice"
#     }
#     chmod g+w /dev/pts/0
#     su - drksl
#     '

# exit on error
set -eu

APT_INSTALL=true
PACMAN_INSTALL=true
NIX_INSTALL=true

# dependencies
[ "$APT_INSTALL" = "true" ] && [ -e /etc/apt ] && sudo apt update && sudo DEBIAN_FRONTEND=noninteractive apt install -y curl fuse sudo tmux xz-utils zsh
[ "$PACMAN_INSTALL" = "true" ] && [ -e /etc/pacman.d ] && sudo pacman -Syu --noconfirm curl fuse2 sudo tmux xz zsh

# install nix
[ "$NIX_INSTALL" = "true" ]&& {
    export NIX_PKGS_OS="nixpkgs"
    [ ! -e /nix ] && {
      curl -L nixos.org/nix/install | sh
      . "$HOME/.nix-profile/etc/profile.d/nix.sh"
    }
    [ -e /etc/nixos ] && {
      export NIX_PKGS_OS="nixos"
      nix-env -iA ${NIX_PKGS_OS}.zsh ${NIX_PKGS_OS}.tmux
    }
    nix-env -iA ${NIX_PKGS_OS}.bat ${NIX_PKGS_OS}.fzf ${NIX_PKGS_OS}.gcc ${NIX_PKGS_OS}.git ${NIX_PKGS_OS}.killall ${NIX_PKGS_OS}.lazygit \
                ${NIX_PKGS_OS}.libsixel ${NIX_PKGS_OS}.less ${NIX_PKGS_OS}.lf  ${NIX_PKGS_OS}.ripgrep ${NIX_PKGS_OS}.timg ${NIX_PKGS_OS}.trash-cli \
                ${NIX_PKGS_OS}.xclip ${NIX_PKGS_OS}.spaceship-prompt ${NIX_PKGS_OS}.zsh-autosuggestions ${NIX_PKGS_OS}.zsh-fast-syntax-highlighting
    nix-collect-garbage -d
  }

# install neovim + plugins
curl -Lo "$HOME"/.local/bin/nvim https://github.com/neovim/neovim/releases/download/v0.7.2/nvim.appimage && chmod +x "$HOME"/.local/bin/nvim
git clone --depth=1 https://github.com/nvchad/nvchad ~/.config/nvim

# source zsh plugins
cat <<"====" >> "$HOME/.zprofile"
    export DISPLAY=:0
    export EDITOR="nvim"
    export HISTFILE=~/.cache/history
    export LANG=en_US.UTF-8
    export LF_ICONS=" tw= :or= :ex= :bd= :di= :ow= :ln= :fi= "
    export LS_COLORS="tw=30:or=91:ex=92:bd=93:di=90:ow=94:ln=34:fi=37"
    export PAGER="less -r --use-color -Dd+r -Du+b -DPyk -DSyk"
    export PATH="$PATH:$HOME/.local/bin"
    export SAVEHIST=10000000
    export SPACESHIP_PROMPT_SEPARATE_LINE="false"
    export SPACESHIP_VI_MODE_SHOW="false"
    export TERM="xterm-256color"
    source $HOME/.nix-profile/lib/spaceship-prompt/spaceship.zsh
    source $HOME/.nix-profile/share/zsh/site-functions/fast-syntax-highlighting.plugin.zsh
    source $HOME/.nix-profile/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    source $HOME/.nix-profile/etc/profile.d/nix.sh >/dev/null 2>&1
    tty >> /tmp/sixel-$WEZTERM_PANE
    trap "rm /tmp/sixel-$WEZTERM_PANE" EXIT
    [[ -z $TMUX ]] && sleep 1 && exec tmux -u
    [[ -e /.dockerenv ]] && echo "/dev/pts/0" >/tmp/sixel-$WEZTERM_PANE
    bindkey -v '^?' backward-delete-char
    function zle-keymap-select () {
        case $KEYMAP in
            vicmd) echo -ne '\e[2 q';;      # block
            viins|main) echo -ne '\e[6 q';; # beam
        esac
    }
    zle -N zle-keymap-select
    zle-line-init() {
        zle -K viins
        echo -ne "\e[6 q"
    }
    zle -N zle-line-init
    preexec() { echo -ne '\e[6 q' ;} # Use beam shape cursor for each new prompt.
====

# zshrc for nvchad-terminal
if [ -e "$HOME/.bashrc" ]; then echo "/bin/zsh -l"           >> "$HOME/.bashrc"; fi;
if [ -e "$HOME/.zshrc" ]; then echo "source $HOME/.zprofile" >> "$HOME/.zshrc"; else ln -s "$HOME/.zprofile" "$HOME/.zshrc"; fi;

# lfcd
mkdir -p "$HOME/.config/lf" \
    && curl -L "https://raw.githubusercontent.com/gokcehan/lf/master/etc/lfcd.sh"  >> "$HOME/.zprofile"    \
    && echo -E "zle -N lfcd </dev/tty"                                             >> "$HOME/.zprofile"    \
    && echo -E "bindkey '\eo' 'lfcd'"                                              >> "$HOME/.zprofile"    \
    && sed -i 's/cd "$dir"/cd "$dir" \&\& zle reset-prompt/'                          "$HOME/.zprofile"    #\
    # && cp -r /home/*/.nix-profile $HOME  #if running as root

# lfrc
cat <<"====">> "$HOME/.config/lf/lfrc"
set icons
set hidden true
set ratios 1:2
set shell /bin/bash
set previewer ~/.config/lf/previewer
set cleaner ~/.config/lf/cleaner

cmd fzf_ripgrep ${{
  IFS=: read -ra selected < <(
    rg --color=always --line-number --no-heading --smart-case "${*:-}" |
      fzf --ansi \
          --color "hl:-1:underline,hl+:-1:underline:reverse" \
          --delimiter : \
          --preview 'bat --color=always {1} --highlight-line {2}' \
          --preview-window 'up,60%,border-bottom,+{2}+3/3,~3'
  )
  [ -n "${selected[0]}" ] && lf -remote "send $id select \"${selected[0]}\""
  [ -n "${selected[0]}" ] && nvim "${selected[0]}" "+${selected[1]}"
}}

map i       $[[ $fx =~ .png|.jpg ]] && img2sixel --loop-control=disable $fx | less -r >$(head -n1 /tmp/sixel-$WEZTERM_PANE) && lf -remote "send $id reload redraw" || bat --paging=always --wrap=never $fx
map o       $( timg -pi --loops=1 --frames=1 $fx | less -rX) >$(head -n1 /tmp/sixel-$WEZTERM_PANE) && lf -remote "send $id reload redraw"
map gmi     $[[ $fx =~ .png|.jpg ]] && img2sixel --loop-control=disable $fx | less -r >$(head -n1 /tmp/sixel-$WEZTERM_PANE) && lf -remote "send $id reload redraw" || bat --paging=always --wrap=never $fx
map gmo     $( timg -pi --loops=1 --frames=1 $fx | less -rX) >$(head -n1 /tmp/sixel-$WEZTERM_PANE) && lf -remote "send $id reload redraw"
map gms     $wezterm cli split-pane --horizontal -- bash -c "timg --center $fx && read"
map gmt     $wezterm cli spawn -- bash -c "timg --center $fx && read"
map gll     $lazygit
map gfs     $lf -remote "send $id select \"$(fzf --bind='?:toggle-preview' --preview 'bat --color=always {}' --preview-window 'right,50%,border-left' </dev/tty)\""
map gfr     :fzf_ripgrep
map <enter> shell
map J       half-down
map K       half-up
====

# lf previewer
cat <<"====">> "$HOME/.config/lf/previewer"
#!/bin/bash
[[ $1 =~ .png|.jpg ]] && (tput cup $5 $4 && img2sixel --loop-control=disable -w $((${2}*8)) $1) >$(head -n1 /tmp/sixel-$WEZTERM_PANE) && exit 1 || bat --style=plain --color=always $1
====

# lf cleaner
cat <<"====">> "$HOME/.config/lf/cleaner"
#!/bin/bash
killall -s SIGWINCH lf
====

# lf executables
chmod +x "$HOME"/.config/lf/{previewer,cleaner} \

# use zsh as default shell
sudo chsh -s "$(which zsh)" "$USER"

# tmux config
cat <<====>> "$HOME/.tmux.conf"
    set  -g  default-shell      /bin/zsh
    set  -g  mouse              on
    set  -g  status             off
    setw -g  mode-keys          vi
    set  -ga terminal-overrides "xterm-256color:Tc"
    bind -T  copy-mode-vi y     send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
    bind -T  copy-mode-vi v     send-keys -X begin-selection
    bind -n  C-M-l              send-keys C-l \; run 'tmux clear-history'
    bind -n  C-M-Space          copy-mode \; send-keys left left
    bind     Space              copy-mode \; send-keys left left
    bind -n  C-M-b              set -g status
    bind     b                  set -g status
    bind     c                  set -g status on \; new-window
    bind     x                  kill-pane
    bind     v                  split-window -h
    bind     V                  split-window -v
    bind -r  h                  select-pane -L
    bind -r  j                  select-pane -D
    bind -r  k                  select-pane -U
    bind -r  l                  select-pane -R
    bind -r  H                  resize-pane -L
    bind -r  J                  resize-pane -D
    bind -r  K                  resize-pane -U
    bind -r  L                  resize-pane -R
====
tput -T ansi setaf 2; echo Done!
